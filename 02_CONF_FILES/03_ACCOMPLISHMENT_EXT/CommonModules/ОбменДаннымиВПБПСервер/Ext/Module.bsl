
Функция ОтправитьДанныеНаСервере(КаталогОбмена) Экспорт
	
	СтруктураВозврата = Новый Структура;  
	ЗаполнитьСтруктуруВозврата(СтруктураВозврата);      
		
	ВыборкаУзлов = ПолучитьУзлыОбмена("ПланОбмена_Выполнение_1_0_и_БП_3_0");
	
	Если ВыборкаУзлов = Неопределено Тогда 
		СтруктураВозврата.ЗавершеноСОшибкой = Истина;
		СтруктураВозврата.ТекстОшибки = "Узлов для обмена не найдено!";
		Возврат СтруктураВозврата;	          
		
	КонецЕсли; 
	
	ЭтотУзел = ПланыОбмена.ПланОбмена_Выполнение_1_0_и_БП_3_0.ЭтотУзел();
	СтруктураНоменклатуры = ПолучитьСтруктуруНоменклатуры();  
	СтруктураКонтрагента = ПолучитьСтруктуруКонтрагента();
	
	Пока ВыборкаУзлов.Следующий() Цикл   
		
		ТекУзел = ВыборкаУзлов.Ссылка;
		
		ЗаписьXML = Новый ЗаписьXML();
        ИмяФайла = СтрШаблон("%3\%1_%2.xml",ЭтотУзел.Код,ТекУзел.Код,КаталогОбмена);
		ЗаписьXML.ОткрытьФайл(ИмяФайла);
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML,ТекУзел);
		
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(ТекУзел,ЗаписьСообщения.НомерСообщения);
		
		МассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры = ПолучитьМассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры();	

		Пока ВыборкаИзменений.Следующий() Цикл   
			
			Данные = ВыборкаИзменений.Получить();
			
			Если МассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры.Найти(ТипЗнч(Данные)) <> Неопределено Тогда  
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,Данные); 
			КонецЕсли;   
			
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Номенклатура") Тогда 
				ЗаполнитьЗначенияСвойств(СтруктураНоменклатуры,Данные);	
				СтруктураНоменклатуры.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураНоменклатуры.Тип = "Справочник.Номенклатура";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,СтруктураНоменклатуры);
				
			КонецЕсли;     
			
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Контрагенты") Тогда 
				ЗаполнитьЗначенияСвойств(СтруктураКонтрагента,Данные);	
				СтруктураКонтрагента.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураКонтрагента.Тип = "Справочник.Контрагенты";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,СтруктураКонтрагента);
				
			КонецЕсли;   
			
		КонецЦикла;

		ЗаписьСообщения.ЗакончитьЗапись();
		
	КонецЦикла;
		
КонецФункции 

Функция ПолучитьДанныеНаСервере(КаталогОбмена) Экспорт      
	
	СтруктураВозврата = Новый Структура;  
	ЗаполнитьСтруктуруВозврата(СтруктураВозврата);      

	ВыборкаУзлов = ПолучитьУзлыОбмена("ПланОбмена_Выполнение_1_0_и_БП_3_0");	 
	
	Если ВыборкаУзлов = Неопределено Тогда 
		СтруктураВозврата.ЗавершеноСОшибкой = Истина;
		СтруктураВозврата.ТекстОшибки = "Узлов для обмена не найдено!";
		Возврат СтруктураВозврата;	          
		
	КонецЕсли;  
	
	ЭтотУзел = ПланыОбмена.ПланОбмена_Выполнение_1_0_и_БП_3_0.ЭтотУзел();

	Пока ВыборкаУзлов.Следующий() Цикл   
		
		ТекУзел = ВыборкаУзлов.Ссылка;
		
		ИмяФайла = СтрШаблон("%3\%1_%2.xml",ТекУзел.Код,ЭтотУзел.Код,КаталогОбмена); 
		Файл = Новый Файл(ИмяФайла);
		
		Если НЕ Файл.Существует() Тогда 
			Продолжить;	
		КонецЕсли;
		
		
		ЧтениеXML = Новый ЧтениеXML();
		ЧтениеXML.ОткрытьФайл(ИмяФайла);
		ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
		
		Попытка
			ЧтениеСообщения.НачатьЧтение(ЧтениеXML);  
		Исключение	  
			ИнформацияОбОшибке = ИнформацияОбОшибке();
			СтруктураВозврата.ЗавершеноСОшибкой = Истина;
			СтруктураВозврата.ТекстОшибки = ИнформацияОбОшибке.Причина.Описание;
			Возврат СтруктураВозврата;      
	
		КонецПопытки;

		ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ЧтениеСообщения.НомерПринятого);
		
		МассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры = ПолучитьМассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры();	
		
		Пока СериализаторXDTO.ВозможностьЧтенияXML(ЧтениеXML) Цикл   
			
			Данные = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
			
			Если МассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры.Найти(ТипЗнч(Данные)) <> Неопределено Тогда 
				Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
				Данные.ОбменДанными.Загрузка = Истина; 
				Данные.Записать();  
				
			КонецЕсли;   
			
			Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Номенклатура" Тогда 
				Ссылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));
				ОбъектНоменклатуры = Ссылка.ПолучитьОбъект();
				
				Если ОбъектНоменклатуры = Неопределено Тогда 
					Если Данные.ЭтоГруппа Тогда 
						ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьГруппу(); 
						ЗаполняемыеРеквизиты = "Наименование,Родитель";
					Иначе	
						ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();  
						ЗаполняемыеРеквизиты = "Наименование,Родитель,НаименованиеПолное,ВидНоменклатуры,ЕдиницаИзмерения";
					КонецЕсли;
					
					ОбъектНоменклатуры.УстановитьСсылкуНового(Ссылка); 
					ОбъектНоменклатуры.УстановитьНовыйКод("");
					
				КонецЕсли;	
				
				ЗаполнитьЗначенияСвойств(ОбъектНоменклатуры,Данные,ЗаполняемыеРеквизиты);    
				ОбъектНоменклатуры.ОбменДанными.Загрузка = Истина; 
				ОбъектНоменклатуры.Записать();  
				ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ОбъектНоменклатуры);
				
			КонецЕсли;   

			Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Контрагенты" Тогда 
				Ссылка = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));
				ОбъектКонтрагента = Ссылка.ПолучитьОбъект();
				
				Если ОбъектКонтрагента = Неопределено Тогда 
					Если Данные.ЭтоГруппа Тогда 
						ОбъектКонтрагента = Справочники.Контрагенты.СоздатьГруппу(); 
						ЗаполняемыеРеквизиты = "Наименование,Родитель";
					Иначе	
						ОбъектКонтрагента = Справочники.Контрагенты.СоздатьЭлемент();  
						ЗаполняемыеРеквизиты = "Наименование,Родитель,НаименованиеПолное,ЮридическоеФизическоеЛицо,СтранаРегистрации,ИНН,КПП,КодПоОКПО";
					КонецЕсли;
					
					ОбъектКонтрагента.УстановитьСсылкуНового(Ссылка); 
					ОбъектКонтрагента.УстановитьНовыйКод("");
					
				КонецЕсли;	
				
				ЗаполнитьЗначенияСвойств(ОбъектКонтрагента,Данные,ЗаполняемыеРеквизиты);    
				ОбъектКонтрагента.ОбменДанными.Загрузка = Истина; 
				ОбъектКонтрагента.Записать();      
				ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ОбъектКонтрагента);
				
			КонецЕсли;   
			
		КонецЦикла;

		ЧтениеСообщения.ЗакончитьЧтение();
		
	КонецЦикла;

КонецФункции

Функция ЗарегестрироватьОбъектыДляНачальногоОбменаНаСервере() Экспорт 
	
	СтруктураВозврата = Новый Структура;  
	ЗаполнитьСтруктуруВозврата(СтруктураВозврата);      

	ВыборкаУзлов = ПолучитьУзлыОбмена("ПланОбмена_Выполнение_1_0_и_БП_3_0");	 
	
	Если ВыборкаУзлов = Неопределено Тогда 
		СтруктураВозврата.ЗавершеноСОшибкой = Истина;
		СтруктураВозврата.ТекстОшибки = "Узлов для обмена не найдено!";
		Возврат СтруктураВозврата;	          
		
	КонецЕсли;  
	
	СоставОбмена = Новый Массив;
	СоставОбмена.Добавить(Справочники.ВидыНоменклатуры.Выбрать());
	СоставОбмена.Добавить(Справочники.КлассификаторЕдиницИзмерения.Выбрать());    
	СоставОбмена.Добавить(Справочники.СтраныМира.Выбрать()); 
	СоставОбмена.Добавить(Справочники.Номенклатура.Выбрать()); 
	СоставОбмена.Добавить(Справочники.Контрагенты.Выбрать()); 
	
	Пока ВыборкаУзлов.Следующий() Цикл   
		ТекУзел = ВыборкаУзлов.Ссылка;     
		
		Если ТекУзел.НомерОтправленного > 0 Тогда 
			Сообщить(СтрШаблон("Регистрация объектов не выполнена! Обмен с узлом %1 уже производился.",ТекУзел));
			Продолжить;
		КонецЕсли;
		
		Для каждого ВыборкаЭлементов Из СоставОбмена Цикл
			Пока ВыборкаЭлементов.Следующий() Цикл
				ПланыОбмена.ЗарегистрироватьИзменения(ТекУзел,ВыборкаЭлементов.Ссылка.ПолучитьОбъект());	
			КонецЦикла;		
		КонецЦикла;	
	КонецЦикла;	
		
		
КонецФункции // ()

// Возвращает выборку с узлами обмена (кроме текущего узла) для плана обмена с именем, переданным в параметре.
//
// Параметры:
// 	ПланОбмена  - Строка - Имя плана обмена   
//
// Возвращаемое значение:
//  - ВыборкаИзРезультатаЗапроса - выборка с узлами обмена, исключая текущий узел.
//  - Неопределено - если узлы обмена не найдены.
//
Функция ПолучитьУзлыОбмена(ПланОбмена)
	
	Если Метаданные.ПланыОбмена.Найти(ПланОбмена) = Неопределено Тогда 
		Возврат Неопределено;	
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПланОбмена.Ссылка КАК Ссылка,
		|	ПланОбмена.Код КАК Код
		|ИЗ
		|	ПланОбмена.&ПланОбмена КАК ПланОбмена
		|ГДЕ
		|	НЕ ПланОбмена.ЭтотУзел";  
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"&ПланОбмена",ПланОбмена);
	
	РезультатЗапроса = Запрос.Выполнить(); 
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат Неопределено;	
	КонецЕсли;
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	
	Возврат ВыборкаДетальныеЗаписи;

КонецФункции // ПолучитьУзлыОбмена()

Процедура ЗаполнитьСтруктуруВозврата(СтруктураВозврата)
	
	СтруктураВозврата.Вставить("ЗавершеноСОшибкой",Ложь);
	СтруктураВозврата.Вставить("ТекстОшибки","");
	
КонецПроцедуры

Функция ПолучитьМассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры()

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникОбъект.ВидыНоменклатуры")); 
	МассивТипов.Добавить(Тип("СправочникОбъект.КлассификаторЕдиницИзмерения"));    
	МассивТипов.Добавить(Тип("СправочникОбъект.СтраныМира")); 
	
	Возврат МассивТипов;
	
КонецФункции

Функция ПолучитьМассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры()

	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("СправочникОбъект.ВидыНоменклатуры")); 
	МассивТипов.Добавить(Тип("СправочникОбъект.КлассификаторЕдиницИзмерения"));      
	МассивТипов.Добавить(Тип("СправочникОбъект.СтраныМира")); 
	МассивТипов.Добавить(Тип("СправочникОбъект.НоменклатураКлиентов")); 
	МассивТипов.Добавить(Тип("СправочникОбъект.СпецификацииКлиентов"));
	МассивТипов.Добавить(Тип("ДокументОбъект.ПоступлениеТоваровУслугПредварительное"));
	
	Возврат МассивТипов;
	
КонецФункции   

Функция ПолучитьСтруктуруНоменклатуры()

	Возврат	Новый Структура("Наименование,Родитель,ЭтоГруппа,НаименованиеПолное,ВидНоменклатуры,ЕдиницаИзмерения,УИД,Тип");

КонецФункции  

Функция ПолучитьСтруктуруКонтрагента()
	
	Возврат	Новый Структура("Наименование,Родитель,ЭтоГруппа,НаименованиеПолное,ЮридическоеФизическоеЛицо,СтранаРегистрации,ИНН,КПП,КодПоОКПО,УИД,Тип");

КонецФункции  

Функция ПодготовитьДанныеНаСервере() Экспорт
	
	СтруктураВозврата = Новый Структура;  
	ЗаполнитьСтруктуруВозврата(СтруктураВозврата);     
	СтруктураВозврата.Вставить("МассивСообщений");
		
	ВыборкаУзлов = ПолучитьУзлыОбмена("ПланОбмена_Выполнение_1_0_и_БП_3_0");
	
	Если ВыборкаУзлов = Неопределено Тогда 
		СтруктураВозврата.ЗавершеноСОшибкой = Истина;
		СтруктураВозврата.ТекстОшибки = "Узлов для обмена не найдено!";
		Возврат СтруктураВозврата;	          
		
	КонецЕсли; 
	
	ЭтотУзел = ПланыОбмена.ПланОбмена_Выполнение_1_0_и_БП_3_0.ЭтотУзел();       
	СтруктураНоменклатуры = ПолучитьСтруктуруНоменклатуры();  
	СтруктураКонтрагента = ПолучитьСтруктуруКонтрагента();
	
	МассивСообщений = Новый Массив;
	
	Пока ВыборкаУзлов.Следующий() Цикл   
		
		ТекУзел = ВыборкаУзлов.Ссылка;
		
		ЗаписьXML = Новый ЗаписьXML();
        ИмяФайла = ПолучитьИмяВременногоФайла();
		ЗаписьXML.ОткрытьФайл(ИмяФайла);  
		ЗаписьСообщения = ПланыОбмена.СоздатьЗаписьСообщения();
		ЗаписьСообщения.НачатьЗапись(ЗаписьXML,ТекУзел);
		
		ВыборкаИзменений = ПланыОбмена.ВыбратьИзменения(ТекУзел,ЗаписьСообщения.НомерСообщения);
		
		МассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры = ПолучитьМассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры();	
				
		Пока ВыборкаИзменений.Следующий() Цикл   
			
			Данные = ВыборкаИзменений.Получить();
			
			Если МассивОтправляемыхТиповОбъектовСПолнымСоответствиемСтруктуры.Найти(ТипЗнч(Данные)) <> Неопределено Тогда  
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,Данные); 
			КонецЕсли;   
			
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Номенклатура") Тогда 
				ЗаполнитьЗначенияСвойств(СтруктураНоменклатуры,Данные);	
				СтруктураНоменклатуры.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураНоменклатуры.Тип = "Справочник.Номенклатура";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,СтруктураНоменклатуры);
				
			КонецЕсли;   
			
			Если ТипЗнч(Данные) = Тип("СправочникОбъект.Контрагенты") Тогда 
				ЗаполнитьЗначенияСвойств(СтруктураКонтрагента,Данные);	
				СтруктураКонтрагента.УИД = Строка(Данные.Ссылка.УникальныйИдентификатор());
				СтруктураКонтрагента.Тип = "Справочник.Контрагенты";
				СериализаторXDTO.ЗаписатьXML(ЗаписьXML,СтруктураКонтрагента);
				
			КонецЕсли;   
						
		КонецЦикла;      
		
		ЗаписьСообщения.ЗакончитьЗапись();   
		ЗаписьXML.Закрыть();
		
		ТекстФайлаXML = Новый ТекстовыйДокумент;
		ТекстФайлаXML.Прочитать(ИмяФайла);

		СтрокаСообщения = "";
		
		Для НомерСтроки = 1 По ТекстФайлаXML.КоличествоСтрок() Цикл
		 	Стр = ТекстФайлаXML.ПолучитьСтроку(НомерСтроки);  
			СтрокаСообщения = СтрокаСообщения + Стр + Символы.ПС;
		КонецЦикла;
		
		МассивСообщений.Добавить(СтрокаСообщения);  
		УдалитьФайлы(ИмяФайла);
		
	КонецЦикла;    
	
	СтруктураВозврата.МассивСообщений = МассивСообщений;
	
	Возврат СтруктураВозврата;
		
КонецФункции 

Функция ПолучитьДанныеИзRMQНаСервере(ПолученноеСообщение) Экспорт
	
	СтруктураВозврата = Новый Структура;  
	ЗаполнитьСтруктуруВозврата(СтруктураВозврата);     

    ВременныйФайл = ПолучитьИмяВременногоФайла("xml");
	ПолученноеСообщение = СокрЛП(ПолученноеСообщение);
	
	ЗаписьТекста = Новый ЗаписьТекста;
    ЗаписьТекста.Открыть(ВременныйФайл);
	ЗаписьТекста.ЗаписатьСтроку(ПолученноеСообщение);  
	ЗаписьТекста.Закрыть();  
			
	ИмяФайла = "c:\обмен\temp001.xml";
	КопироватьФайл(ВременныйФайл,ИмяФайла);  
	
	ЧтениеXML = Новый ЧтениеXML();
	ЧтениеXML.ОткрытьФайл(ИмяФайла);
	ЧтениеСообщения = ПланыОбмена.СоздатьЧтениеСообщения();
	
	Попытка
		ЧтениеСообщения.НачатьЧтение(ЧтениеXML);  
	Исключение	  
		ИнформацияОбОшибке = ИнформацияОбОшибке();
		СтруктураВозврата.ЗавершеноСОшибкой = Истина;
		СтруктураВозврата.ТекстОшибки = ИнформацияОбОшибке.Причина.Описание;
		Возврат СтруктураВозврата;      

	КонецПопытки;

	ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ЧтениеСообщения.НомерПринятого);
	
	МассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры = ПолучитьМассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры();	
	
	Пока СериализаторXDTO.ВозможностьЧтенияXML(ЧтениеXML) Цикл   
		
		Данные = СериализаторXDTO.ПрочитатьXML(ЧтениеXML);
		
		Если МассивПринимаемыхТиповОбъектовСПолнымСоответствиемСтруктуры.Найти(ТипЗнч(Данные)) <> Неопределено Тогда 
			Данные.ОбменДанными.Отправитель = ЧтениеСообщения.Отправитель;
			Данные.ОбменДанными.Загрузка = Истина; 
			Данные.Записать();  
			
		КонецЕсли;   
		
		Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Номенклатура" Тогда 
			Ссылка = Справочники.Номенклатура.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));
			ОбъектНоменклатуры = Ссылка.ПолучитьОбъект();
			
			Если ОбъектНоменклатуры = Неопределено Тогда 
				Если Данные.ЭтоГруппа Тогда 
					ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьГруппу(); 
					ЗаполняемыеРеквизиты = "Наименование,Родитель";
				Иначе	
					ОбъектНоменклатуры = Справочники.Номенклатура.СоздатьЭлемент();  
					ЗаполняемыеРеквизиты = "Наименование,Родитель,НаименованиеПолное,ВидНоменклатуры,ЕдиницаИзмерения";
				КонецЕсли;
				
				ОбъектНоменклатуры.УстановитьСсылкуНового(Ссылка);    
				ОбъектНоменклатуры.УстановитьНовыйКод("");
				
			КонецЕсли;	
			
			ЗаполнитьЗначенияСвойств(ОбъектНоменклатуры,Данные,ЗаполняемыеРеквизиты);    
			ОбъектНоменклатуры.ОбменДанными.Загрузка = Истина; 
			ОбъектНоменклатуры.Записать();      
			ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ОбъектНоменклатуры);
			
		КонецЕсли;    
		
		Если ТипЗнч(Данные) = Тип("Структура") И Данные.Тип = "Справочник.Контрагенты" Тогда 
			Ссылка = Справочники.Контрагенты.ПолучитьСсылку(Новый УникальныйИдентификатор(Данные.УИД));
			ОбъектКонтрагента = Ссылка.ПолучитьОбъект();
			
			Если ОбъектКонтрагента = Неопределено Тогда 
				Если Данные.ЭтоГруппа Тогда 
					ОбъектКонтрагента = Справочники.Контрагенты.СоздатьГруппу(); 
					ЗаполняемыеРеквизиты = "Наименование,Родитель";
				Иначе	
					ОбъектКонтрагента = Справочники.Контрагенты.СоздатьЭлемент();  
					ЗаполняемыеРеквизиты = "Наименование,Родитель,НаименованиеПолное,ЮридическоеФизическоеЛицо,СтранаРегистрации,ИНН,КПП,КодПоОКПО";
				КонецЕсли;
				
				ОбъектКонтрагента.УстановитьСсылкуНового(Ссылка); 
				ОбъектКонтрагента.УстановитьНовыйКод("");
				
			КонецЕсли;	
			
			ЗаполнитьЗначенияСвойств(ОбъектКонтрагента,Данные,ЗаполняемыеРеквизиты);    
			ОбъектКонтрагента.ОбменДанными.Загрузка = Истина; 
			ОбъектКонтрагента.Записать();      
			ПланыОбмена.УдалитьРегистрациюИзменений(ЧтениеСообщения.Отправитель,ОбъектКонтрагента);
			
		КонецЕсли;   

	КонецЦикла;

	ЧтениеСообщения.ЗакончитьЧтение();   
	УдалитьФайлы(ВременныйФайл);

КонецФункции






